package reservation.entities;

import java.io.Serializable;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.MapsId;
import javax.persistence.Table;
import javax.persistence.Version;

/**
 * Car represented as an entity.
 * 
 * @author inikolov
 *
 */
@Entity
@Table(name = "rs_car")
public class Car implements Serializable {

	/**
	 * Serial.
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Autogenerated PK.
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id")
	private long id;

	/**
	 * Entity's version number.
	 */
	@Version
	@Column(name = "version")
	private int version;

	/**
	 * Car's registration number
	 */
	@Column(name = "reg_number", nullable = false, unique = true)
	private String registrationNumber;

	/**
	 * Car's specifications.
	 */
	@ManyToOne(cascade = CascadeType.ALL)
	@MapsId
	@JoinColumn(name = "carSpecs")
	private CarSpecification carSpecs;

	protected Car() {
	}

	public Car(String registrationNumber, CarSpecification carSpecs) {
		this.registrationNumber = registrationNumber;
		this.carSpecs = carSpecs;
	}

	public int getVersion() {
		return version;
	}

	public void setVersion(int version) {
		this.version = version;
	}

	public String getRegistrationNumber() {
		return registrationNumber;
	}

	public void setRegistrationNumber(String registrationNumber) {
		this.registrationNumber = registrationNumber;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((carSpecs == null) ? 0 : carSpecs.hashCode());
		result = prime * result + ((registrationNumber == null) ? 0 : registrationNumber.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Car other = (Car) obj;
		if (carSpecs == null) {
			if (other.carSpecs != null)
				return false;
		} else if (!carSpecs.equals(other.carSpecs))
			return false;
		if (registrationNumber == null) {
			if (other.registrationNumber != null)
				return false;
		} else if (!registrationNumber.equals(other.registrationNumber))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Car [registrationNumber=" + registrationNumber + ", carSpecs=" + carSpecs + "]";
	}

}
